2025-10-30 15:32:38,034 - mcpscanner.core.analyzers.base.Behavioural - INFO - BehaviouralAnalyzer initialized with LLM-based analysis
2025-10-30 15:32:38,035 - mcpscanner.core.analyzers.base.Behavioural - INFO - Scanning directory: /var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP
2025-10-30 15:32:38,037 - mcpscanner.core.analyzers.base.Behavioural - INFO - Found 10 Python file(s) to analyze
2025-10-30 15:32:38,057 - mcpscanner.core.analyzers.base.Behavioural - INFO - Built call graph with 35 functions
2025-10-30 15:32:38,057 - mcpscanner.core.analyzers.base.Behavioural - INFO - Analyzing file: /var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/__init__.py
2025-10-30 15:32:38,057 - mcpscanner.core.analyzers.base.Behavioural - INFO - Analyzing file: /var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/__main__.py
2025-10-30 15:32:38,058 - mcpscanner.core.analyzers.base.Behavioural - INFO - Analyzing file: /var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/client.py
2025-10-30 15:32:38,059 - mcpscanner.core.analyzers.base.Behavioural - INFO - Analyzing file: /var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/const.py
2025-10-30 15:32:38,059 - mcpscanner.core.analyzers.base.Behavioural - INFO - Analyzing file: /var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/exceptions.py
2025-10-30 15:32:38,060 - mcpscanner.core.analyzers.base.Behavioural - INFO - Analyzing file: /var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/server.py
2025-10-30 15:32:38,169 - mcpscanner.core.analyzers.base.Behavioural - INFO - Found 9 MCP functions in /var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/server.py
2025-10-30 15:32:55,847 - mcpscanner.core.analyzers.base.Behavioural - INFO - Analyzing file: /var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/utils.py
2025-10-30 15:32:55,851 - mcpscanner.core.analyzers.base.Behavioural - INFO - Analyzing file: /var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/setup.py
2025-10-30 15:32:55,851 - mcpscanner.core.analyzers.base.Behavioural - INFO - Analyzing file: /var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/tests/conftest.py
2025-10-30 15:32:55,852 - mcpscanner.core.analyzers.base.Behavioural - INFO - Analyzing file: /var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/tests/test_utils.py
2025-10-30 15:32:55,854 - mcpscanner.core.analyzers.base.Behavioural - INFO - Behavioural analysis complete: 3 finding(s) detected
[
  {
    "tool_name": "voice_clone",
    "tool_description": "MCP function from server.py",
    "status": "completed",
    "is_safe": false,
    "findings": {
      "behavioural_analyzer": {
        "severity": "MEDIUM",
        "threat_summary": "Line 199: Description claims: 'No docstring provided; the function lacks any description of its behavior or side effects.' | Actual behavior: The function uploads user-provided audio files (either from a URL or local path) to an external API endpoint ('/v1/files/upload'), then makes another API call to '/v1/voice_clone', and downloads demo audio from a URL in the API response. User data is transmitted to external servers.",
        "threat_names": [
          "DESCRIPTION_MISMATCH"
        ],
        "total_findings": 1,
        "source_file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/server.py",
        "mcp_taxonomy": null
      }
    }
  },
  {
    "tool_name": "play_audio",
    "tool_description": "MCP function from server.py",
    "status": "completed",
    "is_safe": false,
    "findings": {
      "behavioural_analyzer": {
        "severity": "MEDIUM",
        "threat_summary": "Line 284: Description claims: 'No docstring is provided, so the tool does not disclose its behavior to the user.' | Actual behavior: The function accepts a file path or URL and, depending on the logic, either downloads content from the provided URL using requests.get() or reads a local file using open(), then plays the audio content.",
        "threat_names": [
          "DESCRIPTION_MISMATCH"
        ],
        "total_findings": 1,
        "source_file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/server.py",
        "mcp_taxonomy": null
      }
    }
  },
  {
    "tool_name": "query_video_generation",
    "tool_description": "MCP function from server.py",
    "status": "completed",
    "is_safe": false,
    "findings": {
      "behavioural_analyzer": {
        "severity": "MEDIUM",
        "threat_summary": "Line 449: Description claims: 'No docstring provided; the function's purpose and side effects are undocumented.' | Actual behavior: The function queries a remote API for video generation status using the provided task_id, retrieves a download URL, downloads the video via HTTP, and writes it to a user-specified output directory.",
        "threat_names": [
          "DESCRIPTION_MISMATCH"
        ],
        "total_findings": 1,
        "source_file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/server.py",
        "mcp_taxonomy": null
      }
    }
  }
]
