{
  "total_repos": 42,
  "repos_with_findings": [
    "MiniMax-MCP",
    "android-mcp-server",
    "elevenlabs-mcp",
    "freecad-mcp",
    "kubectl-mcp-server",
    "mcp-alchemy",
    "mcpdoc",
    "mem-agent-mcp",
    "yargi-mcp"
  ],
  "safe_repos": [
    "DeepMCPAgent",
    "MetasploitMCP",
    "Office-PowerPoint-MCP-Server",
    "Office-Word-MCP-Server",
    "ableton-mcp",
    "alpaca-mcp-server",
    "arxiv-mcp-server",
    "browser-use-mcp-server",
    "chroma-mcp",
    "docling-mcp",
    "doris-mcp-server",
    "duckduckgo-mcp-server",
    "jupyter-mcp-server",
    "linkedin-mcp-server",
    "mcp-browser-use",
    "mcp-foundry",
    "mcp-google-sheets",
    "mcp-mem0",
    "mcp-odoo",
    "mcp-pandoc",
    "mcp-proxy",
    "mcp-redis",
    "mcp-server-docker",
    "mcp-server-qdrant",
    "mcp-server",
    "mcp-windbg",
    "mysql_mcp_server",
    "postgres-mcp",
    "spotify-mcp",
    "supabase-mcp",
    "telegram-mcp",
    "web-eval-agent",
    "zotero-mcp"
  ],
  "parse_errors": [],
  "findings_by_severity": {
    "MEDIUM": [
      {
        "repo": "MiniMax-MCP",
        "tool": "voice_clone",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/server.py",
        "severity": "MEDIUM",
        "summary": "Line 199: Description claims: 'No docstring provided; the function lacks any description of its behavior or side effects.' | Actual behavior: The function uploads user-provided audio files (either from a URL or local path) to an external API endpoint ('/v1/files/upload'), then makes another API call to '/v1/voice_clone', and downloads demo audio from a URL in the API response. User data is transmitted to external servers."
      },
      {
        "repo": "MiniMax-MCP",
        "tool": "play_audio",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/server.py",
        "severity": "MEDIUM",
        "summary": "Line 284: Description claims: 'No docstring is provided, so the tool does not disclose its behavior to the user.' | Actual behavior: The function accepts a file path or URL and, depending on the logic, either downloads content from the provided URL using requests.get() or reads a local file using open(), then plays the audio content."
      },
      {
        "repo": "MiniMax-MCP",
        "tool": "query_video_generation",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/server.py",
        "severity": "MEDIUM",
        "summary": "Line 449: Description claims: 'No docstring provided; the function's purpose and side effects are undocumented.' | Actual behavior: The function queries a remote API for video generation status using the provided task_id, retrieves a download URL, downloads the video via HTTP, and writes it to a user-specified output directory."
      },
      {
        "repo": "elevenlabs-mcp",
        "tool": "voice_clone",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
        "severity": "MEDIUM",
        "summary": "Line 517: Description claims: 'No docstring provided; user has no information about what the tool does.' | Actual behavior: Receives user-provided audio files and metadata, processes file paths, and sends them to an external API (client.voices.ivc.create), likely for voice cloning via ElevenLabs."
      },
      {
        "repo": "elevenlabs-mcp",
        "tool": "create_agent",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
        "severity": "MEDIUM",
        "summary": "Line 590: Description claims: 'No docstring provided; the tool does not disclose its purpose or any side effects.' | Actual behavior: Creates a conversational AI agent by making an external API call via client.conversational_ai.agents.create(), potentially incurring costs and transmitting user-supplied configuration data to an external service (e.g., ElevenLabs)."
      },
      {
        "repo": "elevenlabs-mcp",
        "tool": "add_knowledge_base_to_agent",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
        "severity": "MEDIUM",
        "summary": "Line 656: Description claims: 'No docstring provided; user cannot know what the tool does.' | Actual behavior: Accepts agent ID, knowledge base name, and either a URL, file path, or text, then uploads the provided data (potentially file contents or text) to an external API via client.conversational_ai.knowledge_base.documents.create_from_url or create_from_file."
      },
      {
        "repo": "elevenlabs-mcp",
        "tool": "speech_to_speech",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
        "severity": "MEDIUM",
        "summary": "Line 897: Description claims: 'No docstring is provided, so the tool does not disclose its purpose or external interactions.' | Actual behavior: The function takes an input audio file, a voice name, and an output directory, then calls an external API (client.speech_to_speech.convert) to perform speech-to-speech conversion using the ElevenLabs service, which may incur costs and transmits user audio data externally."
      },
      {
        "repo": "elevenlabs-mcp",
        "tool": "make_outbound_call",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
        "severity": "MEDIUM",
        "summary": "Line 1027: Description claims: 'No docstring provided; the tool does not disclose its purpose or operations.' | Actual behavior: Initiates an outbound call using either Twilio or SIP trunk APIs, transmitting agent_id, agent_phone_number_id, and to_number to external telephony services."
      },
      {
        "repo": "elevenlabs-mcp",
        "tool": "play_audio",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
        "severity": "MEDIUM",
        "summary": "Line 1159: Description claims: 'No docstring provided; the function lacks any description of its behavior.' | Actual behavior: Accepts a user-supplied file path, processes it via handle_input_file, reads the file in binary mode, and plays its contents using a play() function."
      },
      {
        "repo": "mcp-alchemy",
        "tool": "schema_definitions",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/mcp-alchemy/mcp_alchemy/server.py",
        "severity": "MEDIUM",
        "summary": "Line 125: Description claims: 'No docstring provided; the function does not disclose its purpose or side effects.' | Actual behavior: The function inspects database schema information for the provided table names by connecting to a database and retrieving columns, primary keys, and foreign key relationships using inspector methods."
      },
      {
        "repo": "mcpdoc",
        "tool": "fetch_docs",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/mcpdoc/mcpdoc/main.py",
        "severity": "MEDIUM",
        "summary": "Line 231: Description claims: 'No docstring is provided, so the tool does not disclose its behavior or security boundaries.' | Actual behavior: The function fetches content from user-supplied URLs using httpx_client.get(), and also allows reading local files if the URL is not HTTP/HTTPS, with some checks on allowed files and domains."
      },
      {
        "repo": "mem-agent-mcp",
        "tool": "use_memory_agent",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/mem-agent-mcp/mcp_server/server.py",
        "severity": "MEDIUM",
        "summary": "Line 114: Description claims: 'Provide the local memory agent with the user query as is, without any modifications.' | Actual behavior: The code modifies the user query by appending filter data to it before passing it to the agent (question = question + '\\n\\n' + '<filter>' + filters + '</filter>')."
      },
      {
        "repo": "yargi-mcp",
        "tool": "search_anayasa_unified",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/yargi-mcp/mcp_server_main.py",
        "severity": "MEDIUM",
        "summary": "Line 816: Description claims: 'No docstring provided; the tool does not disclose its purpose or operations.' | Actual behavior: Receives multiple user parameters, constructs an AnayasaUnifiedSearchRequest, and sends it to anayasa_unified_client_instance.search_unified(), returning the result as JSON."
      }
    ],
    "HIGH": [
      {
        "repo": "android-mcp-server",
        "tool": "execute_adb_shell_command",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/android-mcp-server/server.py",
        "severity": "HIGH",
        "summary": "Line 63: Description claims: 'Executes an ADB command and returns the output or an error.' | Actual behavior: Passes user-provided input directly to deviceManager.execute_adb_shell_command, which likely executes the command on a connected device without any validation or sanitization."
      },
      {
        "repo": "elevenlabs-mcp",
        "tool": "isolate_audio",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
        "severity": "HIGH",
        "summary": "Line 540: Description claims: 'No docstring provided; user has no information about external operations or costs.' | Actual behavior: Reads audio data from a user-supplied file and sends it to an external API (ElevenLabs) for processing via client.audio_isolation.convert()."
      },
      {
        "repo": "freecad-mcp",
        "tool": "execute_code",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/freecad-mcp/src/freecad_mcp/server.py",
        "severity": "HIGH",
        "summary": "Line 407: Description claims: 'Execute arbitrary Python code in FreeCAD and return a message, output, and screenshot.' | Actual behavior: Directly executes arbitrary user-supplied Python code in the FreeCAD environment via freecad.execute_code(code) without any validation or restriction."
      },
      {
        "repo": "kubectl-mcp-server",
        "tool": "process_natural_language",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/kubectl-mcp-server/kubectl_mcp_tool/minimal_wrapper.py",
        "severity": "HIGH",
        "summary": "Line 568: Description claims: 'Process natural language query for kubectl.' | Actual behavior: Processes user-supplied natural language or arguments and constructs kubectl commands, which are then executed via run_kubectl_command(cmd) without evidence of input sanitization or validation."
      },
      {
        "repo": "mcp-alchemy",
        "tool": "execute_query",
        "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/mcp-alchemy/mcp_alchemy/server.py",
        "severity": "HIGH",
        "summary": "Line 170: Description claims: 'No docstring provided; the function does not disclose its behavior to the user.' | Actual behavior: Executes an arbitrary SQL query (from 'query' parameter) with user-supplied parameters against a database connection, then saves the full result set as a JSON file in a local directory and returns a URL pointing to this file hosted on a public CDN (jsdelivr.net)."
      }
    ],
    "LOW": []
  },
  "all_findings": [
    {
      "repo": "MiniMax-MCP",
      "tool": "voice_clone",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/server.py",
      "severity": "MEDIUM",
      "summary": "Line 199: Description claims: 'No docstring provided; the function lacks any description of its behavior or side effects.' | Actual behavior: The function uploads user-provided audio files (either from a URL or local path) to an external API endpoint ('/v1/files/upload'), then makes another API call to '/v1/voice_clone', and downloads demo audio from a URL in the API response. User data is transmitted to external servers."
    },
    {
      "repo": "MiniMax-MCP",
      "tool": "play_audio",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/server.py",
      "severity": "MEDIUM",
      "summary": "Line 284: Description claims: 'No docstring is provided, so the tool does not disclose its behavior to the user.' | Actual behavior: The function accepts a file path or URL and, depending on the logic, either downloads content from the provided URL using requests.get() or reads a local file using open(), then plays the audio content."
    },
    {
      "repo": "MiniMax-MCP",
      "tool": "query_video_generation",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/MiniMax-MCP/minimax_mcp/server.py",
      "severity": "MEDIUM",
      "summary": "Line 449: Description claims: 'No docstring provided; the function's purpose and side effects are undocumented.' | Actual behavior: The function queries a remote API for video generation status using the provided task_id, retrieves a download URL, downloads the video via HTTP, and writes it to a user-specified output directory."
    },
    {
      "repo": "android-mcp-server",
      "tool": "execute_adb_shell_command",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/android-mcp-server/server.py",
      "severity": "HIGH",
      "summary": "Line 63: Description claims: 'Executes an ADB command and returns the output or an error.' | Actual behavior: Passes user-provided input directly to deviceManager.execute_adb_shell_command, which likely executes the command on a connected device without any validation or sanitization."
    },
    {
      "repo": "elevenlabs-mcp",
      "tool": "voice_clone",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
      "severity": "MEDIUM",
      "summary": "Line 517: Description claims: 'No docstring provided; user has no information about what the tool does.' | Actual behavior: Receives user-provided audio files and metadata, processes file paths, and sends them to an external API (client.voices.ivc.create), likely for voice cloning via ElevenLabs."
    },
    {
      "repo": "elevenlabs-mcp",
      "tool": "isolate_audio",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
      "severity": "HIGH",
      "summary": "Line 540: Description claims: 'No docstring provided; user has no information about external operations or costs.' | Actual behavior: Reads audio data from a user-supplied file and sends it to an external API (ElevenLabs) for processing via client.audio_isolation.convert()."
    },
    {
      "repo": "elevenlabs-mcp",
      "tool": "create_agent",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
      "severity": "MEDIUM",
      "summary": "Line 590: Description claims: 'No docstring provided; the tool does not disclose its purpose or any side effects.' | Actual behavior: Creates a conversational AI agent by making an external API call via client.conversational_ai.agents.create(), potentially incurring costs and transmitting user-supplied configuration data to an external service (e.g., ElevenLabs)."
    },
    {
      "repo": "elevenlabs-mcp",
      "tool": "add_knowledge_base_to_agent",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
      "severity": "MEDIUM",
      "summary": "Line 656: Description claims: 'No docstring provided; user cannot know what the tool does.' | Actual behavior: Accepts agent ID, knowledge base name, and either a URL, file path, or text, then uploads the provided data (potentially file contents or text) to an external API via client.conversational_ai.knowledge_base.documents.create_from_url or create_from_file."
    },
    {
      "repo": "elevenlabs-mcp",
      "tool": "speech_to_speech",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
      "severity": "MEDIUM",
      "summary": "Line 897: Description claims: 'No docstring is provided, so the tool does not disclose its purpose or external interactions.' | Actual behavior: The function takes an input audio file, a voice name, and an output directory, then calls an external API (client.speech_to_speech.convert) to perform speech-to-speech conversion using the ElevenLabs service, which may incur costs and transmits user audio data externally."
    },
    {
      "repo": "elevenlabs-mcp",
      "tool": "make_outbound_call",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
      "severity": "MEDIUM",
      "summary": "Line 1027: Description claims: 'No docstring provided; the tool does not disclose its purpose or operations.' | Actual behavior: Initiates an outbound call using either Twilio or SIP trunk APIs, transmitting agent_id, agent_phone_number_id, and to_number to external telephony services."
    },
    {
      "repo": "elevenlabs-mcp",
      "tool": "play_audio",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/elevenlabs-mcp/elevenlabs_mcp/server.py",
      "severity": "MEDIUM",
      "summary": "Line 1159: Description claims: 'No docstring provided; the function lacks any description of its behavior.' | Actual behavior: Accepts a user-supplied file path, processes it via handle_input_file, reads the file in binary mode, and plays its contents using a play() function."
    },
    {
      "repo": "freecad-mcp",
      "tool": "execute_code",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/freecad-mcp/src/freecad_mcp/server.py",
      "severity": "HIGH",
      "summary": "Line 407: Description claims: 'Execute arbitrary Python code in FreeCAD and return a message, output, and screenshot.' | Actual behavior: Directly executes arbitrary user-supplied Python code in the FreeCAD environment via freecad.execute_code(code) without any validation or restriction."
    },
    {
      "repo": "kubectl-mcp-server",
      "tool": "process_natural_language",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/kubectl-mcp-server/kubectl_mcp_tool/minimal_wrapper.py",
      "severity": "HIGH",
      "summary": "Line 568: Description claims: 'Process natural language query for kubectl.' | Actual behavior: Processes user-supplied natural language or arguments and constructs kubectl commands, which are then executed via run_kubectl_command(cmd) without evidence of input sanitization or validation."
    },
    {
      "repo": "mcp-alchemy",
      "tool": "schema_definitions",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/mcp-alchemy/mcp_alchemy/server.py",
      "severity": "MEDIUM",
      "summary": "Line 125: Description claims: 'No docstring provided; the function does not disclose its purpose or side effects.' | Actual behavior: The function inspects database schema information for the provided table names by connecting to a database and retrieving columns, primary keys, and foreign key relationships using inspector methods."
    },
    {
      "repo": "mcp-alchemy",
      "tool": "execute_query",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/mcp-alchemy/mcp_alchemy/server.py",
      "severity": "HIGH",
      "summary": "Line 170: Description claims: 'No docstring provided; the function does not disclose its behavior to the user.' | Actual behavior: Executes an arbitrary SQL query (from 'query' parameter) with user-supplied parameters against a database connection, then saves the full result set as a JSON file in a local directory and returns a URL pointing to this file hosted on a public CDN (jsdelivr.net)."
    },
    {
      "repo": "mcpdoc",
      "tool": "fetch_docs",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/mcpdoc/mcpdoc/main.py",
      "severity": "MEDIUM",
      "summary": "Line 231: Description claims: 'No docstring is provided, so the tool does not disclose its behavior or security boundaries.' | Actual behavior: The function fetches content from user-supplied URLs using httpx_client.get(), and also allows reading local files if the URL is not HTTP/HTTPS, with some checks on allowed files and domains."
    },
    {
      "repo": "mem-agent-mcp",
      "tool": "use_memory_agent",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/mem-agent-mcp/mcp_server/server.py",
      "severity": "MEDIUM",
      "summary": "Line 114: Description claims: 'Provide the local memory agent with the user query as is, without any modifications.' | Actual behavior: The code modifies the user query by appending filter data to it before passing it to the agent (question = question + '\\n\\n' + '<filter>' + filters + '</filter>')."
    },
    {
      "repo": "yargi-mcp",
      "tool": "search_anayasa_unified",
      "file": "/var/folders/5b/tl5xxjnx1qng1bxm4kxfsjk00000gn/T/mcp_scan_hjoozfe1/yargi-mcp/mcp_server_main.py",
      "severity": "MEDIUM",
      "summary": "Line 816: Description claims: 'No docstring provided; the tool does not disclose its purpose or operations.' | Actual behavior: Receives multiple user parameters, constructs an AnayasaUnifiedSearchRequest, and sends it to anayasa_unified_client_instance.search_unified(), returning the result as JSON."
    }
  ]
}